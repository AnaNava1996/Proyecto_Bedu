runApp('Dashboard.R')
runApp('~/Desktop/BEDU/Postworks/PostWork_Bedu/postwork_8/pw_8.R')
runApp('Dashboard.R')
runApp('Dashboard.R')
runApp('Dashboard.R')
runApp('~/Desktop/BEDU/BEDU-Banco-Santander-3-caminos-Data-Analytics/Etapa_2/Programacion-con-R-Santander-master/Sesion-08/Ejemplo-04')
runApp('Dashboard.R')
runApp('Dashboard.R')
runApp('Dashboard.R')
runApp('Dashboard.R')
runApp('Dashboard.R')
#librerias necesarias
library(tidyverse)
#librerias necesarias
if (!require("tidyverse")) install.packages("tidyverse")
if (!require("lubridate")) install.packages("lubridate")
library(shiny); runApp('~/Desktop/BEDU/Postworks/PostWork_Bedu/postwork_8/pw_8.R')
runApp('~/Desktop/BEDU/BEDU-Banco-Santander-3-caminos-Data-Analytics/Etapa_2/Programacion-con-R-Santander-master/Sesion-08/Ejemplo-05')
library(tidyverse)
runApp('Dashboard.R')
runApp('Dashboard.R')
runApp('Dashboard.R')
runApp('Dashboard.R')
runApp('Dashboard.R')
library(tmap)
if (!require("tmap")) install.packages("tmap")
if (!require("tmap")) install.packages("tmap")
incendios<-read.csv("./Data_Sets/incendios_en_regiones.csv")
latitudes <- incendios$latitude
longitudes <- incendios$longitude
install.packages("googleway")
library(googleway)
add_heatmap(
map,
data = get_map_data(map),
lat = latitudes,
lon = longitudes,
weight = NULL,
option_gradient = NULL,
option_dissipating = FALSE,
option_radius = 0.01,
option_opacity = 0.6,
layer_id = NULL,
update_map_view = TRUE,
digits = 4,
legend = F,
legend_options = NULL
)
map_key <- 'your_api_key'
google_map(key = map_key, data = df) %>%
add_heatmap(
map,
data = get_map_data(map),
lat = latitudes,
lon = longitudes,
weight = NULL,
option_gradient = NULL,
option_dissipating = FALSE,
option_radius = 0.01,
option_opacity = 0.6,
layer_id = NULL,
update_map_view = TRUE,
digits = 4,
legend = F,
legend_options = NULL
)
library(googleway)
map_key <- 'your_api_key'
google_map(key = map_key, data = df) %>%
add_heatmap(
map,
data = get_map_data(map),
lat = latitudes,
lon = longitudes,
weight = NULL,
option_gradient = NULL,
option_dissipating = FALSE,
option_radius = 0.01,
option_opacity = 0.6,
layer_id = NULL,
update_map_view = TRUE,
digits = 4,
legend = F,
legend_options = NULL
)
install.packages("googleway")
library(googleway)
incendios<-read.csv("./Data_Sets/incendios_en_regiones.csv")
latitudes <- incendios$latitude
longitudes <- incendios$longitude
map_key <- 'your_api_key'
google_map(key = map_key, data = df) %>%
add_heatmap(
map,
data = get_map_data(map),
lat = latitudes,
lon = longitudes,
weight = NULL,
option_gradient = NULL,
option_dissipating = FALSE,
option_radius = 0.01,
option_opacity = 0.6,
layer_id = NULL,
update_map_view = TRUE,
digits = 4,
legend = F,
legend_options = NULL
)
devtools::install_github("SymbolixAU/googlePolylines")
devtools::install_github("SymbolixAU/googleway")
runApp('Dashboard.R')
version
## Dash board para el data set 'mtcars'
install.packages("units", type='binary')
runApp('Dashboard.R')
library(tmap)
install.packages("leaflet")
install.packages("units")
install.packages("units")
if (!require("tmap")) install.packages("tmap",dependencies=TRUE)
library(tmap)
runApp('Dashboard.R')
runApp('Dashboard.R')
runApp('~/Desktop/BEDU/BEDU-Banco-Santander-3-caminos-Data-Analytics/Etapa_2/Programacion-con-R-Santander-master/Sesion-08/Ejemplo-05')
print(source('~/Desktop/BEDU/Proyecto_Bedu/Dashboard.R')$value)
runApp('Dashboard.R')
runApp('Dashboard.R')
#if (!require("shiny")) install.packages("shiny")
#if (!require("shinydashboard")) install.packages("shinydashboard")
#if (!require("shinythemes")) install.packages("shinythemes")
if (!require("tmap")) install.packages("tmap",dependencies=TRUE)
#if (!require("shiny")) install.packages("shiny")
#if (!require("shinydashboard")) install.packages("shinydashboard")
#if (!require("shinythemes")) install.packages("shinythemes")
#if (!require("tmap"))
install.packages("tmap",dependencies=TRUE)
install.packages("leaflet")
install.packages("units", dependencies = TRUE)
#if (!require("shiny")) install.packages("shiny")
#if (!require("shinydashboard")) install.packages("shinydashboard")
#if (!require("shinythemes")) install.packages("shinythemes")
#if (!require("tmap"))
install.packages("tmap",dependencies=TRUE)
#if (!require("shiny")) install.packages("shiny")
#if (!require("shinydashboard")) install.packages("shinydashboard")
#if (!require("shinythemes")) install.packages("shinythemes")
#if (!require("tmap"))
install.packages("tmap",dependencies=TRUE)
library(shiny); runApp('Dashboard.R')
#agrupamos por ecorregion y fecha
red_time <- df %>% group_by(date_acq, DESECON1) %>%
# contamos los puntos q ocurrieron en misma fecha misma ecorregion
summarise(c0unt = n()) %>%
# agregamos columnas d anno, mes y dia del anno p analisis intra-anual
mutate(
year = year(date_acq),
moy = month(date_acq),
doy = yday(date_acq)
)
source('~/Dev/Proyecto_Bedu/graficas_01.R')
source('~/Dev/Proyecto_Bedu/graficas_01.R')
runApp('Dashboard.R')
runApp('Dashboard.R')
runApp('Dashboard.R')
runApp('Dashboard.R')
runApp('Dashboard.R')
runApp('Dashboard.R')
runApp('Dashboard.R')
runApp('Dashboard.R')
runApp('Dashboard.R')
runApp('Dashboard.R')
runApp('Dashboard.R')
runApp('Dashboard.R')
library(dbplyr)
library(dbplyr)
fires <- read.csv('./Data_Sets/incendios_con_ecoregiones_y_tiposdesuelo.csv')
View(fires)
source('~/Dev/Proyecto_Bedu/timeseries.R')
View(fires)
View(fires)
source('~/Dev/Proyecto_Bedu/timeseries.R')
View(fires)
source('~/Dev/Proyecto_Bedu/timeseries.R')
View(fires)
source('~/Dev/Proyecto_Bedu/timeseries.R')
source('~/Dev/Proyecto_Bedu/timeseries.R')
source('~/Dev/Proyecto_Bedu/timeseries.R')
?ts
source('~/Dev/Proyecto_Bedu/timeseries.R')
plot(fires)
source('~/Dev/Proyecto_Bedu/timeseries.R')
source('~/Dev/Proyecto_Bedu/timeseries.R')
source('~/Dev/Proyecto_Bedu/timeseries.R')
source('~/Dev/Proyecto_Bedu/timeseries.R')
fires.data <- read.csv('./Data_Sets/incendios_con_ecoregiones_y_tiposdesuelo.csv')
View(fires.data)
environments <-
fires.data %>%
group_by(DESECON1, acq_date) %>%
summarize(count = n())
View(environments)
environments <-
fires.data %>%
filter(DESECON1 != "")
group_by(DESECON1, acq_date) %>%
summarize(count = n())
environments <-
fires.data %>%
filter(DESECON1 != "") %>%
group_by(DESECON1, acq_date) %>%
summarize(count = n())
View(environments)
environments <-
fires.data %>%
filter(DESECON1 != "") %>%
group_by(DESECON1, acq_date) %>%
summarize(count = n()) %>%
group_split(DESECON1)
View(environments)
View(environments[[1]])
environments %>% lapply(to.time.serie)
to.time.serie <- function(df) {
summary(df)
}
environments %>% lapply(to.time.serie)
View(environments)
View(environments[[1]])
ggplot(environments[[1]]) %>%
aes(x = count, y = acq_date)
ggplot(environments[[1]]) +
aes(x = count, y = acq_date)
ggplot(environments[[1]]) +
geom_col()
aes(x = count, y = acq_date)
ggplot(environments[[1]]) +
geom_col() +
aes(x = count, y = acq_date)
ggplot(environments[[1]]) +
geom_col() +
aes(x = acq_date, y = count)
ts(environments[[1]]$count, start = c(2000, 11), end = c(2019, 12), frecuency = 365)
ts(environments[[1]]$count, start = c(2000, 11), end = c(2019, 12), frequency = 365)
a <- ts(environments[[1]]$count, start = c(2000, 11), end = c(2019, 12), frequency = 365)
plot(a)
decompose(a)
plot(decompose(a))
con seq(ymd('f2000-11-01'),ymd('2019-12-32'), by = '1 day')
seq(ymd('f2000-11-01'),ymd('2019-12-32'), by = '1 day')
seq(ymd('2000-11-01'),ymd('2019-12-32'), by = '1 day')
ymd('2000-11-01')
seq(as.Date("2000/11/1"), as.Date("2019/12/31"), "day")
days <- seq(as.Date("2000/11/1"), as.Date("2019/12/31"), "day")
as.data.frame(days)
days <- seq(as.Date("2000/11/1"), as.Date("2019/12/31"), "day") %>% as.data.frame
View(days)
days <-
seq(as.Date("2000/11/1"), as.Date("2019/12/31"), "day") %>%
as.data.frame(row.names = c('acq_date'))
days <-
seq(as.Date("2000/11/1"), as.Date("2019/12/31"), "day") %>%
as.data.frame(row.names = c('acq_date'))
days <-
seq(as.Date("2000/11/1"), as.Date("2019/12/31"), "day") %>%
as.data.frame(col.names = c('acq_date'))
View(days)
View(days)
days <-
seq(as.Date("2000/11/1"), as.Date("2019/12/31"), "day") %>%
as.data.frame(col.names = c('acq_date'))
View(days)
days <-
seq(as.Date("2000/11/1"), as.Date("2019/12/31"), "day") %>%
data.frame(acq_date = .)
View(days)
a <- environments[[1]] %>% full_join(days, by = "acq_date")
environments <-
fires.data %>%
filter(DESECON1 != "") %>%
mutate(acq_date = as.Date(acq_date)) %>%
group_by(DESECON1, acq_date) %>%
summarize(count = n()) %>%
group_split(DESECON1)
View(environments)
a <- environments[[1]] %>% full_join(days, by = "acq_date")
View(a)
a$count[is.na(a$count)] <- 0
max(a$DESECON1)
min(a$DESECON1)
min(a$DESECON1)
first(a$DESECON1)
a$DESECON1[is.na(a$DESECON1)] <- first(a$DESECON1)
a <- environments[[1]] %>% full_join(days, by = "acq_date") %>% sort(acq_date)
a <- environments[[1]] %>% full_join(days, by = "acq_date") %>% arrange(acq_date)
to.time.serie <- function(df) {
data <-
df %>% full_join(days, by = "acq_date") %>% arrange(acq_date)
data$count[is.na(data$count)] <- 0
data$DESECON1[is.na(data$DESECON1)] <- first(data$DESECON1)
return(ts(
data$count,
start = c(2000, 11),
end = c(2019, 12),
frequency = 365
))
}
days <-
seq(as.Date("2000/11/1"), as.Date("2019/12/31"), "day") %>%
data.frame(acq_date = .)
environments <-
fires.data %>%
filter(DESECON1 != "") %>%
mutate(acq_date = as.Date(acq_date)) %>%
group_by(DESECON1, acq_date) %>%
summarize(count = n()) %>%
group_split(DESECON1) %>%
lapply(to.time.serie)
View(environments)
plot(environments[[1]])
plot(environments[[2]])
list("hola" = "1")
View(environments)
get.names <- function(df) {
return(first(df$DESECON1))
}
environments.names <- lapply(environments, get.names)
environments <-
fires.data %>%
filter(DESECON1 != "") %>%
mutate(acq_date = as.Date(acq_date)) %>%
group_by(DESECON1, acq_date) %>%
summarize(count = n()) %>%
group_split(DESECON1)
environments.names <- lapply(environments, get.names)
View(environments.names)
names(environments) <- environments.names
View(environments)
environments.ts <- environments %>% lapply(to.time.serie)
plot(environments.ts$`California Mediterranea`)
library(shiny); runApp('Dashboard.R')
ymd
runApp('Dashboard.R')
runApp('Dashboard.R')
library(shiny); runApp('Dashboard.R')
library(shiny); runApp('Dashboard.R')
View(fires.data)
View(environments)
View(environments[["California Mediterranea"]])
incendios <-
read.csv("./Data_Sets/incendios_con_ecoregiones_y_tiposdesuelo.csv", row.names = NULL) %>%
filter(DESECON1 != "", GRUPO_FINA != "") %>%
mutate(
date_acq = ymd(acq_date),
time_acq = hm(acq_time),
year = year(date_acq),
moy = month(date_acq)
)
View(incendios)
incendios %>% select(instrument)
runApp('Dashboard.R')
mapping <- list(
"Regiones" = "GRUPO_FINA",
"Tipo de suelo" = "DESECON1"
)
mapping <- list(
"Regiones" = "GRUPO_FINA",
"Tipo de suelo" = "DESECON1"
)
mapping["Regiones"]
incendios[, mapping["Regiones"]]
mapping["Regiones"][1]
mapping["Regiones"][[1]]
incendios[, mapping["Regiones"][[1]]]
runApp('Dashboard.R')
incendios[, mapping[input$x][[1]]] %>%
ggplot(x) +
aes(x) +
geom_histogram() +
labs(xlim = c(0, max(x))) +
theme_light() +
xlab(input$x) +
ylab("Frecuencia")
incendios[, mapping[input$x][[1]]] %>%
ggplot(x) +
aes(x) +
geom_histogram() +
labs(xlim = c(0, max(x))) +
theme_light() +
xlab(input$x) +
ylab("Frecuencia")
incendios[, mapping["Regiones"][[1]]] %>%
ggplot(x) +
aes(x) +
geom_histogram() +
labs(xlim = c(0, max(x))) +
theme_light() +
xlab(input$x) +
ylab("Frecuencia")
incendios[, mapping["Regiones"][[1]]] %>%
ggplot() +
aes("Regiones") +
geom_histogram() +
# labs(xlim = c(0, max(x))) +
theme_light() +
xlab("Regiones") +
ylab("Frecuencia")
incendios %>%
ggplot() +
aes(x = "Regiones") +
geom_histogram() +
# labs(xlim = c(0, max(x))) +
theme_light() +
xlab("Regiones") +
ylab("Frecuencia")
incendios %>%
ggplot() +
aes(x = "Regiones") +
stat_count() +
# labs(xlim = c(0, max(x))) +
theme_light() +
xlab("Regiones") +
ylab("Frecuencia")
incendios %>%
ggplot() +
aes(x = "GRUPO_FINA") +
stat_count() +
# labs(xlim = c(0, max(x))) +
theme_light() +
xlab("Regiones") +
ylab("Frecuencia")
incendios %>%
ggplot() +
aes(x = "GRUPO_FINA") +
geom_bar() +
# labs(xlim = c(0, max(x))) +
theme_light() +
xlab("Regiones") +
ylab("Frecuencia")
incendios %>%
ggplot() +
aes(x = GRUPO_FINA) +
geom_bar() +
# labs(xlim = c(0, max(x))) +
theme_light() +
xlab("Regiones") +
ylab("Frecuencia")
incendios %>%
ggplot() +
aes(x = GRUPO_FINA, fill = DESECON1) +
geom_bar() +
# labs(xlim = c(0, max(x))) +
theme_light() +
xlab("Regiones") +
ylab("Frecuencia")
incendios %>%
ggplot() +
aes(x = GRUPO_FINA, fill = DESECON1) +
geom_histogram() +
# labs(xlim = c(0, max(x))) +
theme_light() +
xlab("Regiones") +
ylab("Frecuencia")
incendios %>%
ggplot() +
aes(x = GRUPO_FINA, fill = DESECON1) +
geom_bar() +
# labs(xlim = c(0, max(x))) +
theme_light() +
xlab("Regiones") +
ylab("Frecuencia")
incendios %>%
ggplot() +
aes(x = DESECON1, fill = GRUPO_FINA) +
geom_bar() +
# labs(xlim = c(0, max(x))) +
theme_light() +
xlab("Regiones") +
ylab("Frecuencia")
incendios %>%
ggplot() +
aes(x = DESECON1, fill = GRUPO_FINA) +
geom_bar() +
# labs(xlim = c(0, max(x))) +
theme_light() +
xlab("Regiones") +
ylab("Frecuencia")
incendios %>%
ggplot() +
aes(x = GRUPO_FINA, fill = DESECON1) +
geom_bar() +
labs() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
theme_light() +
xlab("Regiones") +
ylab("Frecuencia")
incendios %>%
ggplot() +
aes(x = GRUPO_FINA, fill = DESECON1) +
geom_bar() +
labs() +
# theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
coord_flip() +
theme_light() +
xlab("Regiones") +
ylab("Frecuencia")
runApp('Dashboard.R')
incendios %>%
ggplot() +
aes(x = GRUPO_FINA, fill = DESECON1) +
geom_bar() +
theme_light() +
xlab("Regiones") +
ylab("Frecuencia")
